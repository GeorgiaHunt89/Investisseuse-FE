{"version":3,"sources":["pages/Home.js","pages/NoMatch.js","api/mutations.js","state/auth.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","state/reducers.js","state/GlobalState.js","api/queries.js","pages/Profile.js","pages/Investments.js","pages/Business.js","pages/About.js","pages/Blog.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","NoMatch","role","aria-label","LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","data","Auth","console","log","handleChange","target","name","value","to","onSubmit","htmlFor","placeholder","type","id","onChange","Signup","props","firstName","lastName","addUser","Nav","loggedIn","href","onClick","logout","reducer","state","action","StoreContext","createContext","Provider","StoreProvider","initialState","products","cart","cartOpen","categories","currentCategory","useReducer","dispatch","QUERY_USER","Profile","useQuery","loading","user","Investments","Business","About","Blog","httpLink","createHttpLink","uri","process","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fbe2d0d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <h1>Home</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <h1>404 Page Not Found</h1>\n      <p>\n        <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n          üôÑ\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!, $role: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password, role: $role) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../api/mutations';\nimport Auth from '../state/auth';\n\nfunction Login() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { ...formState },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">‚Üê Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input placeholder=\"youremail@test.com\" name=\"email\" type=\"email\" id=\"email\" onChange={handleChange} />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input placeholder=\"******\" name=\"password\" type=\"password\" id=\"pwd\" onChange={handleChange} />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../state/auth';\nimport { ADD_USER } from '../api/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '', firstName: '', lastName: '', role: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: { ...formState },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">‚Üê Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input placeholder=\"First\" name=\"firstName\" type=\"firstName\" id=\"firstName\" onChange={handleChange} />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input placeholder=\"Last\" name=\"lastName\" type=\"lastName\" id=\"lastName\" onChange={handleChange} />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input placeholder=\"youremail@test.com\" name=\"email\" type=\"email\" id=\"email\" onChange={handleChange} />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input placeholder=\"******\" name=\"password\" type=\"password\" id=\"pwd\" onChange={handleChange} />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"role\">Role:</label>\n          <input placeholder=\"founder or investor\" name=\"role\" type=\"role\" id=\"role\" onChange={handleChange} />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\nimport Auth from '../../state/auth';\nimport { Link } from 'react-router-dom';\n\nfunction Nav() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/profile\">Profile</Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">Login</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/investments\">Investments</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/business\">Business</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/aboutUs\">About us</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/blog\">Blog</Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">Investisseuse</Link>\n      </h1>\n\n      <nav>{showNavigation()}</nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import { useReducer } from 'react';\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from 'react';\nimport { useProductReducer } from './reducers';\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      _id\n      firstName\n      lastName\n      email\n      role\n    }\n  }\n`;\n","import React from 'react';\nimport { QUERY_USER } from '../api/queries';\nimport { useQuery } from '@apollo/client';\n\nconst Profile = () => {\n  const { data, loading } = useQuery(QUERY_USER);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1>Profile</h1>\n      <p>First Name: {data.user.firstName}</p>\n      <p>Last Name: {data.user.lastName}</p>\n      <p>Email: {data.user.email}</p>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\n\nconst Investments = () => {\n  return (\n    <div className=\"container\">\n      <h1>Investments</h1>\n    </div>\n  );\n};\n\nexport default Investments;\n","import React from 'react';\n\nconst Business = () => {\n  return (\n    <div className=\"container\">\n      <h1>Business</h1>\n    </div>\n  );\n};\n\nexport default Business;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div className=\"container\">\n      <h1>About</h1>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Blog = () => {\n  return (\n    <div className=\"container\">\n      <h1>Blog</h1>\n    </div>\n  );\n};\n\nexport default Blog;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './state/GlobalState';\nimport Profile from './pages/Profile';\nimport Investments from './pages/Investments';\nimport Business from './pages/Business';\nimport About from './pages/About';\nimport Blog from './pages/Blog';\n\nconst httpLink = createHttpLink({\n  uri: process.env.REACT_APP_BASEURL + '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route exact path=\"/investments\" component={Investments} />\n              <Route exact path=\"/business\" component={Business} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/blog\" component={Blog} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}